class01 Test03ThreeSixNineGameReview 디버깅

num    cnt      x         x>0       n
------------------------------------------
1234    0      1000        T        1
234            100         T        2
34             10          T        3
4        1     1           T        4
4              0           F

===========================================

[ 객체지향언어 JAVA ] //추상적이고 어려움
[ 객체지향프로그래밍(OOP)의 특성 ]
1. 커리큘럼
	개념설명(100%이해 못해도 괜찮다) -> 하나하나 예시코드로 설명 -> 개념설명

2. 4가지 (전부다 설계단계에서 고려 하는 것들)

	a) 추상화
		ex) "자동차" 코딩해줘. (rough하게 부탁을 했더니:)
		 1) 스포츠카: 속도, 브레이크()
		 2) 버스: 탑승인원, 요금정산()
		 3) 차: 주유상태출력(), 벨트(), 네비게이션()
		어떻게 정의하느냐에 따라, 서로다른 OUTPUT이 생성될수있다.
		그래서 "설계"가 매우 중요하다!

	b) 캡슐화(모듈화, 컴포넌트화)
		내부구성성분을 몰라도, 효과를 알면 우리는 그냥 먹는다. 
		내부로직코드를 정확히 몰라도, INPUT OUTPUT 기능 활용하는 상황 등을 알면 그냥 쓴다!
		-------------------------------------------------
		기존의 코드들을 분석하여 '모듈화'된 코드들을 가져다가 쓸수있다!
		오류의 파급효과 줄어듦
		개발시간단축
		개발비용절감
		이익 증가
		유지보수 용이 

	c) 상속
		부모(상위) 클래스에서 미리 공통부분을 코딩 해둔다음, 
		자식(하위) 클래스에서 '상속' 받아 세부적인 부분을 구현한다!
		오류의 파급효과 줄어듦
		개발시간단축
		개발비용절감
		이익 증가
		유지보수 용이 
		※ 캡슐화와의 차이점
		캡슐화 : 포함관계가 아님 (다른 알약을 조사해서 필요한 기능을 뜯어옴)
		상속 : 포함관계임 (모든 강아지들은 주민 부모클래스에 속함) ---->>> "설계"단계에서 집중적으로 고민하는 부분!		

	d) ★★★★ 다형성 ★★★★ 모델답안 : 
		" 함수에게 주어(주체)가 생겼기 " 때문에 발생하는 현상
		함수: 일반적인 프로그래밍언어에서 흔히 만들수있음. 주어(주체)가 없음 (C는 이 함수를 실행하는 주어가 없음)
		메서드: 객체지향언어에서만 작성가능. 주어가 있는것이 특징. 
			함수를 실행시키는 주어(주체) == 객체
			객체가 실행하는 함수 => 메서드 
		같은 함수를 실행시켜도, 주어(주체)에 따라 다른 기능이 실행되는 현상
		ex1) 강아지.울음소리(); -> 멍멍
		     고양이.울음소리(); -> 야옹
		ex2) 우리정글.공격(); -> 10 dmg
		     상대정글.공격(); -> 200 dmg

3. "객체지향"으로 넘어오면 '질문'이 바뀐다!
	구조적인(설계적인) 부분을 많이 공부해야한다!!!
Q) 이거 짝수야?
Q) 3, 6, 9 게임의 알고리즘을 작성해줘. 
Q) 배열에 NUM가 있어?
 ↓
Q) 자동차 코딩해줘.
Q) 학생부 프로그램을 제작하고싶어. 학생 데이터 만들어줘.
Q) 스마트폰 코딩해줘. 

===========================================================================
class04 Test03
원 객체들을 생성하고 싶습니다
원이란,
이름이 있고
반지름이 있어요.
원객체야, 너 정보좀 출력해줘!
 ex) circle.printInfo();
 -> ㅁㅁㅁ은 넓이가 ㅁㅁ.ㅁㅁ입니다.

원의 넓이 공식
반지름x반지름x3.14

원 객체 2개 생성하고 상채출력해주세요!~~

2시 5분에 풀이
===========================================================================
class04 Test02C--------책 업그레이드 해주세요-------

판매량 항목을 추가해주시고 (멤버변수 추가해 달라는 뜻)

책이 판매가되었다면 (기능이 생겼다는뜻?)
판매량을 += 10;
printInfo()했을때, 판매량이 보일수있도록!

책을 한권더 생성
 -> ㅁㅁㅁㅁ,ㅁㅁㅁㅁ,100

========================실습=================================================
class04 Test05

자동차 코딩해주세요!
자동차.printInfo()
	-> ㅁㅁ님의 차는 [_/__] 입니다.
		      현재속도/최대속도
자동차.speedUp()
	0 -> 100
	120 -> 과속! -> 120
		최대속도를 못넘어가게 코딩

자동차.speedDown()
	55 -> 45
	5 -> 정지... -> 0
		0보다 작아질수없게 코딩

Car car = new Car();
          무명 / 0 / 120
Car car = new Car("홍길동");
	  홍길동 / 0 / 120
Car car = new Car("아무무",200); // 직접 넣으면 최대속도200
	  아무무 / 0 / 200

틀리면 안되는거 : 
1- 생성자 오버로딩
2- 멤버변수, 메서드
3- this 키워드

+++) 자동차.speedUp(23)
	0 -> 23
========================과제=================================================
※※※※※※※※※※
1. 멤버변수,메서드
2. 생성자 오버로딩
	this()
3. this.
※※※※※※※※※※

[ 과제 1 ]
"점" 만들어주세요!~~
class Point
   int x
   int y
Point point=new Point();
   (0,0)
Point point=new Point(10);
   (10,10)
Point point=new Point(2,3);
   (2,3)
point.move();
   (11,12) -> (12,13)
point.move(3);
   (11,12) -> (14,15)
point.move(4,5);
   (11,12) -> (15,17)
point.printInfo();
   현재위치는 (20,30)입니다.

[ 과제 2 ]
"학생" 만들어줭
class Student
   String name
   int[] score
   double avg
   char grade
Student student=new Student("럭스");
   럭스는 시험을 2번 봅니다.
Student student=new Student("유미",4);
   유미는 시험을 4번 봅니다.
시험점수는 0~100 랜덤으로 저장
student.printInfo();
   럭스
   1번 시험 100점
   2번 시험 50점
   평균 75.0점 [B]
    80.0점이상 A
    60.0점이상 B
    나머지 C
   유미
   1번 시험 100점
   2번 시험 50점
   3번 시험 1점
   4번 시험 21점
   평균 43.0점 [C]

student.test();
   럭스가 재시험을 봅니다.
   score[]배열에 저장된 시험점수(0~100)값을 랜덤으로 다시 저장합니다.


























