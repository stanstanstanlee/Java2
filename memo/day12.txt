[ 컬렉션 프레임워크 ]

"프레임워크"
	컬렉션,Spring,JPA,Mybatis,...
	틀, 골격, 뼈대, ...
	"강제성" => 좋은거에요
ex) 리모컨
	=> 제풀을 판매할때에는 "규격"이 있어야 함
	=> 코당 할때도 코드의 "기준"이 필요하다!
		이 역할을 하는것이 "프레임워크"들


★★★★★

면접질문) 문법은 안물어봄
	어떤 기술을 어떤 상황에 사용하는지 아니? 라고 물어봄
	어떤 로직을 언제 써야 하는지 몰랑~?
		Q. 프레임워크를 사용했을때 좋은점이 뭔가요?
		A. 코드에 기준을 부여하기때문에,
			개발자들의 평균실력이 상향됩니다. 

★★★★★



"데이터 묶음"(==컬렉션)
 : 배열
	불편한점->자료형이 같아야하고 크기를 미리 정해놔야함
 => 크기를 미리 정해놓지 않아도 & 자료형이 달라도 저장할수있는 데이터 묶음
 : 배열리스트, 연결리스트, 집합, 맵, 스택, 큐, 트리, ... (코테에서 물어봄)
					
 => 배열리스트 / 집합 / (맵은 나중에) 	
-------------------------------------------------------------------------------
class01 Test01	[ ArrayList ]
 		//향상된 배열 == 배열리스트
		// 특징)
		//  1. 데이터를 마음대로 저장가능
		//  2. toString() 오버라이딩
		//  3. add(),remove(),clear(),size(),get(),... 과 같은 다양한 기능의 메서드를 기본제공
		//  4. 서로 다른 자료형(타입)들도 저장가능
		//		=> 그러나 웹개발 실무에서 반드시 서로 같은 자료형만 취급!
		//		=> 그래서 "강제성"을 부여하여 사용합니다!~~
		// ★★★★제네릭 <> ★★★★ : (일반화) 저장되는 타입을 일반화
		ArrayList data = new ArrayList();
		ArrayList<String> data = new ArrayList<>();
		ArrayList<Integer> data = new ArrayList<>(); //add(다른타입) 에러 
		
		Integer i=new Integer(10); //원형
		int ii=10; //원시타입쓰쟝~
		
		data.add(10);
		data.add(0,20); //기존 0인덱스에 있던 10을 뒤로 밀어냄
		data.add(0,30); //10과 20 둘 다 뒤로 밀어냄
		data.clear(); //싹 지움
		data.remove(0); //0에 있는거 지워졍 
		data.isEmpty();// 비어있니?? (많이씀) True or False가 나와용
-------------------------------------------------------------------------------
class01 Test02 [ 집합 ]
		// 1. 순서가 없음 (index XXX)
		// 2. 중복 허용 안함 
		// 3. 다양한 자료형 저장 가능
		// 	  -> 하지만, 이렇게 사용하지 않음!!!
		//		 => <>제네릭 함께사용


		// 추상클래스 Set
		// Set류의 부모클래스
//		Set data = new Set(); //Set은 추상클래스이기 때문에 new로 객채화 못함 
//		Set data = new HashSet(); ↓↓↓ 똑같앙
//		HashSet data = new HashSet(); //노란줄 : 제네릭 안걸꺼임???
		HashSet<Integer> data = new HashSet<>();

		data.add(10);
		data.add(10);
		data.add(10);
		data.add(1234);
		data.add(1);
		data.add(2);
		data.add(12);
		data.add(13);
		data.add(11);
//		data.add("apple");
		
		System.out.println(data);
		System.out.println(data.size()); //크10개 넣어도 중복빼고 8개라고만 나옴

-------------------------------------------------------------------------------
1. 10개의 랜덤수를 생성해주세요.
(범위는 1~15까지입니당)
중복을 제외하고 생성된 랜덤수의 개수와 
	랜덤수를 출력해주세요!~~
랜덤수는 3개 생성되었고,
	[ 1, 2, 3 ] 입니다. 

2. 정수를 입력합니다. 0을 입력하면 종료됩니다.
프로그램이 종료되었을때,
현재까지 입력한 정수들의 평균을 출력해주세요!~~
	__.__입니다.
------------------------------------<<모든정수
입력한 정수중에서 짝수가 몇개인지 출력해주세요!~~
	짝수는 __개입니다.
	 [ _, _, _ ] 입니다.
 => 해당 컬렉션에 짝수만 남겨서 출력 해 주세요!~~
 
 
 
 
 		//배열은 개수가 정해져 있어야 하는데 그게 아니니까 못쓴다 
		//
	
		// 처음부터 끝까지 돌면서 
		// data의 모든 요소를 확인할거야 ~ 하나하나 빠짐 없이 볼거야  
		// [ a b c ] 요소 b를 삭제 하면 [ a c ] 이렇게됨
		// [ a c ] 삭제한 인덱스부터 재확인!
 
 
==============================================================================
[ 과제 ] //Product class
상품 : PK,이름,가격,재고
   판매()
   재고변경()
1. 상품목록출력 Read
   재고없는상품은 [품절]
2. 구매하기 Update
3. 프로그램종료

1. 상품추가 Create 
2. 상품재고변경 Update
3. 상품삭제 Delete
4. 관리자모드종료



Test01 -> 기본         60  C
Test02 -> 유효성 검사 추가      80  B
Test03 -> 앞으로 배울내용 추가    100 A

25일에 제출받을예정! 
 
==============================================================================
[ 과제 ] //Product class 일반클래스 
------------------------------------
§ 설계서 

상품 : PK,이름,가격,재고
 [멤버변수] 모두 프라이빗 ==>> getter, setter

 private int num //PK 학생번호

 private String name // 상품이름 

 private int price // 상품가격

 private int cnt // 재고 카운트 트래킹 해야 함; 각 상품마다 디폴트 재고 10개씩 
 
[생성자{}] 
 Product(num,name,price){ //num으로 학생번호 입력받을것임,name상품이름 입력받을것임,price상품가격 입력받을 것임 
 	this.num초기화
	this.name초기화
	this.price초기화	
	this.cnt초기화 = 10 //각 상품마다 디폴트 재고 10개씩 
 }
 
[메서드(){}]
 
 판매() 
	기능 :	메인에서 사용자가 몇개 구매할지를 입력받음. 
		재고와 비교해서 구매 가능 하다면 총 금액을 '반환' 해 줘야함.
		구매 한 만큼 재고 줄여줘야 함. 
		
	INPUT : int cnt
	OUTPUT : int totalPrice;
 
 재고변경() 메인에서 사용자에게 상품번호입력받은 후 
	기능 : 해당 상품번호의 새로운 재고를 입력받음. 새로운 재고로 다시 초기화
	INPUT : int cnt
	OUTPUT : 없음
 
[getter,setter]  private 멤버변수 접근 
num 
name 
price 
cnt 

-------------------------------------
[사용자 모드] - userMenu 
1. 상품목록출력 Read 
	- 재고없는상품은 [품절] 이라고 나와야 함
	- 상품추가가 안되어있으면 : 등록된 상품이 없습니다
	
 
2. 구매하기 Update 
	- 판매()함수 호출 
	- 돈받고 거스름돈?-->메인에서?메서드?(추가사항 추가점수)
 
3. 프로그램종료 
	- 종료조건 break;
 
[관리자 모드] - 입력값 1234로 이동 
	- adminMenu

1. 상품추가 Create 메인에서 하는일
	- 상품 몇개생길지 알수없음, 배열길이 알수없음; 인덱스 필요함, 순서필요함; 
		- ArrayList<Product> 에 저장 

2. 상품재고변경 Update 
	- 재고변경()함수 호출 
 
3. 상품삭제 Delete 메인에서 하는일
	- 

4. 관리자모드종료 (사용자모드로 돌아감) 
	













