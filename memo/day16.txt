MVC

"유효성 검사" == 사용자의 입력값 검사 view에서 진행
	: 사용자의 입력값에 대하여 자료형(타입), 범위등을 확인하는 것

"제고 모자람 디나이" == 기능검사 modelDAO에서 진행

★ 결합도 낮추기 ★
결합도가 낮으면?
 -> 유지보수에 용이함 

이 코드, 왜 결합도가 높을까???
 -> 어떤 요구사항이 발생했을대,
	코드의 여러부분(파트)을 수정해야하는 상황(연쇄적으로 코드를 고쳐야 하는경우)
	== 결합도가 높은상황

DAO의 CRUD(비지니스 메서드, 핵심로직)는 한번 제작 되면 그 이후에 어떤 추가 요청사항이 와도 
절대!
"메서드 시그니처"가 변하기 않도록 코드를 작성해야함!!!

결합도가 낮으면 Model이 불려다닐 일이 없다. 유지보수가 매우 용이해졌다

★★★ java.lang.NullPointerException
 -> "주어(주체)"가 Null이어서 발생하는 이슈
 -> 메서드 앞의 주어가 Null이어서 발생하는 이슈
 -> aaa.bbbb();에서 aaa가 Null이어서 발생하는 이슈 <<== 100퍼에요 1000퍼


DAO의 CRUD메서드 인자를 VO로 통일

★★★[장바구니]★★★
장바구니는 프로그램당 1개 지급 되는게 아니라
	 사용자당 1개 지급됨

forEach
v가 하나씩 복사를 해 옴 
for(B v: datas) { 1차시도 datas.get(0) == v

forEach(향상된for)문은 : 오른쪽에 존재하는 컬렉션을
N차 시도때 N-1번째 인덱스(index)를 복사하여 사용한다. 

for문은 기존 배열[]의 방식을 그대로 사용. 
datas[i] == datas.get(i)



[콜라_3, 사이다_2 환타_1]
CTRL의 cnt 1
CTRL의 vo (1003,nul,0,-1)

for(data : [콜라_3, 사이다_2, 환타_1])
	1 -> 콜라_3
	2 -> 사이다_2
	3 -> 환타_1
 DAO의 cnt       1

시험범위 OT부터 MVC전까지
10시부터 2시간 
15문제정도?

※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※
selectOne() 이슈
1. 기존의 selectOne()은
	datas에서 data를 바로 반환해주고있었음
	 == 즉, 원본을 바로 반환해주고있었음 << 원인

2. 때문에 CTRL클래스에서 사용하는
	data.setCnt(cnt);
	코드에 의해 원본이 변경되는 문제가 발생함!

3. 해결 >> DAO클래스에서
	DrinkVO dVO=new DrinkVO(data.getNum(),data.getName(),data.getPrice(),data.getCnt());
	 위 코드를 통하여 new(객체화,인스턴스화)로 새로운 데이터를 생성,
	 기존에 반환해주던 data를 복사하여 반환해줌 

 DrinkVO dVO=new DrinkVO(data.getNum(),data.getName(),data.getPrice(),data.getCnt());
			   return dVO; //실제 DB데이터(==datas)를 전송 하면 안되고
			   //새로 vo객체를 new(객체화)해서 전송해야함
			   //return data; 하면 업데이트가 된 후 다시 (컨트롤러에있던) 'int cnt = 1 -> data.setCnt(cnt); '때문에 기존 데이타가 1로 돌아가버림. 
※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※

★★★[장바구니]★★★
장바구니는 
=> 원래, 같은 제품을 여러번 구매했을때
		커스터마이징 





