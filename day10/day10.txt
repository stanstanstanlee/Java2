객체를 비교할때, 본질적으로 두개가 같니? 라고 물을 수 없음. 두개의 객체가 같은 주소야?
라고 물어보면 안됨. 다른 객체의 것 이기 때문에

p1==c1 XXX에러
연산자의 대상이 객체가 될수 없음!!
equals()메서드는 두개의 객체가 같은주소 일때만 True가 뜬다. equals는 주소를 봄
=============================================================================
	/*
	 최상위 클래스 Object로부터 상속받은 메서드인 equals()를
	 살짝 바꿔서 사용하고싶음!
	 	-> 오버라이딩 (메서드시그니처가같아야해 : 인자개수 같아야함 순서 같아야함 걍 고정) 메서드 재정의
	void func(double d) { //int 10이 인자로 설정됨
		d=10.0;
		//그냥 10이 필요함
		int i=(int)d; //형변환(타입캐스팅)
		 double d=3; //3.0
		 자동 형변환
		 업캐스팅
	}
	 */
	
	@Override // @어노테이션 : 프로그램이 인지하는 주석
	public boolean equals(Object obj) {
		//타입캐스팅
		Pokemon pokemon = (Pokemon)obj; //명시적형변환 // 다운캐스팅
		// ==>> (p1.equals(p2))  이제 쌉가능
		//내 이름이랑 비교할 대상의 이름이랑 같아?
		if(this.name.equals(pokemon.name)) { //obj.name 오브젝트는 name을 같고있지 않음
			return true;
		}
		return false; 
	}
=============================================================================
class04 PointMove

실습 1) 점 클래스 Point가 있습니다
int x, int y를 멤버변수로 가지고 있습니다.
	좌표

x,y의 좌표가 같다면 같은 점으로 인식할수있도록해주세요!~~

main () {
	Point[] data=new Point[3];
	data[0]에는 점(10,20)
	data[1]에는 점(123,20)
	data[2]에는 점(10,20)
		이 저장되어 있습니다.
	data[0]과 data[1],
	data[0]과 data[2]를 비교해주세요!~~
}

실습 2) 색깔점 클래스 ColorPoint가 있습니다.
int x,int y,String color를 멤버변수로 가지고있습니다.
         점색깔
x,y의 좌표가 같아도 색이 다르면 다른 점으로 인식할수있도록
main(){
   ColorPoint[] data=new ColorPoint[3];
   data[0]에는 파랑(10,20)
   data[1]에는 파랑(10,20)
   data[2]에는 빨강(10,20)
      이 저장되어있습니다.
   data[0]과 data[1],
   data[0]과 data[2]를 비교해주세요!~~
}

=======================================================
===== 메뉴 =====
1. 점 생성
2. 점 목록 출력
3. 점 1개 출력
4. 점 이동
5. 색 변경
6. 점 합치기 (+)
7. 프로그램 종료
===============
Point[] data=new Point[3]; // 최대 3개
   new Point(); // 점(0,0)
   new Point(3,4); // 점(3,4)
   new ColorPoint(); // 검정(0,0)
   new ColorPoint(1,2); // 검정(1,2)
   new ColorPoint("빨강",3,4); // 빨강(3,4)

점(1,2)
검정(2,3)
분홍(-1,-3)

point.move(); -> +1 +1
point.move(10); -> +10 +10
point.move(1,2); -> +1 +2

point.changeColor("빨강")

1,2 + 2,3 => 3,5
		합쳤을때의 결과만 출력하고 끝!
		변화없음!
===============
검사순서
1. 설계서
2. 한글코딩
3. 잘 돌아가는거 확인
4. 유효성 추가

===============

[ 설계서 ]

class 점 (부모)

	점 위치 x, y

	생성자(함수)
	 - 인자없는 생성자
	 - 인자로 x,y값을 받아서 생성
	
	메서드
	 - 점 이동()
		x,y가 바뀌어야 함
		오버로딩
		() +1, +1
		(10) +10 +10
		(1,2) +1 +2

	- 프린트()점 위치 프린트
		점 위치, 색깔까지 프린트 ==>> 오버라이딩


class 색깔점 (자식)
	색깔추가(디폴트:검정)
	
	생성자(함수)
	 - 인자없는 생성자
	 - 인자로 x,y값을 받아서 생성
	 - 인자로 "색깔",x,y값을 받아서 생성
	
	메서드
	 - 색깔 변경()
		색을 인자로 받아야함
		this.color = color;

main() 
	메뉴판
	점배열[] 객체배열은 main것임 그냥 클래스 자료형을 쓰는것임 
			
	점 3개 까지 배열에 저장 가능
			
	 - 저장된 점 출력()		
		점 객체배열안에 모든 값을 출력해야함
	 	1) 점 1개 출력		
			객체배열안에 한개 값을 선택해서 출력해야함
			index 객체꺼 -> 메인꺼		
						
	메뉴판 선택 입력 받아야 함 Scanner 필요 	
	점 1개출력 하는 부분 또 입력 받아야함			
		
					
C)	1. 점 생성 (점 배열에 점 추가하기)
		객체로 생성 			
		
	1-1. 배열안에 있는 점에 객체 자료형 new ColorPoint로 색깔 추가 해야함
					
		
R)	2. 점 목록 출력
		print메서드 
		
	3. 점 1개 출력
		print메서드
		
U)	4. 점 이동
		move메서드
		
	5. 색 변경
		change메서드
		
	6. ???
	
	7. 프로그램종료
======================================================
● 부모클라스 멤버변수는 자식클라스에도 영향이 간다는것 생각 해야 함
"점" 이라는 출력문구는 new Point()<<-- 인자없이 출력 하는곳 말고 그 어디에서도 쓰이지 않음

● ???Point배열이지만 ColorPoint도 저장 할 수 있음???
	int타입이 double타입에 저장 될 수 있는 것 과 같음
	ColoPoint타입 객체를 Point타입 객체배열에 저장 

● 점 생성은 메서드가 아님 메인임
점 목록 출력도 메서드가 아님 (메서드활용가능)


● // 배열에 저장도니 데이터 개수만큼
// 점을 출력해줘
for(int i=0;i<index;i++) { //<<이게 맞는거임 index.length 아님 ! 
	sys
}

● 5번 색변경
instanceof연산자 사용 해야했습니다. 
객체 instanceof 클래스
객체가 오른쪽에 있는 클래스거야?

점 instanceof Point T
색깔점 istanceof Point T

ColorPoinr cp = (ColorPoint)data[action] 다운캐스팅

● print뭐시기 메소드 안만들어도 toString 오버라이딩에서 출력 가능
	-> 메소드를 만들면 자원을 소비함
	-> 오버라이딩 하면 가벼워짐 

syso(point);
== syso(point.toString());

● 6번	(큰 문제를 야기할 수 있음)
	O : 점A와 점 B를 더해줘~~
	X : 점A야, 점B를 더해! 라는 말이 아님 
	☆기능을 개발할때에는 항상
	// "주어(주체)"가 누구인지?
	// "대상(인자)"가 누구인지?
	
함수는 static 붙은; 객체와 무관함;
	- 함수영역은 main함수, 직접만든 클래스들 밖에 있음
	- 주인은 없음; 굳이 있다면 java파일 생성시 생기는 클래스가 주인 ex) public class Test01{}
	-  java파일 생성시 생기는 클래스는 main을 돌리기 위한 클래스임
		- 이 영역에다가 static함수 생성
	





